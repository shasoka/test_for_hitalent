"""–ú–æ–¥—É–ª—å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""

from pydantic import BaseModel, PostgresDsn
from pydantic_settings import BaseSettings, SettingsConfigDict

__all__ = ("settings",)


class RunConfig(BaseModel):
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""

    app_location: str = "main:app"
    host: str = "0.0.0.0"
    port: int = 8000
    reload: bool = True


class AppObjectConfig(BaseModel):
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ FastAPI."""

    title: str = "API-—Å–µ—Ä–≤–∏—Å –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤"
    summary: str = '–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "Junior Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫" üòé'
    description: str = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ü§ù \n\n[GitHub‚ûö](https://github.com/shasoka/test_for_hitalent)"
    )

    version: str = "0.0.1"
    swagger_ui_parameters: dict[str, dict[str, str]] = {
        "syntaxHighlight": {
            "theme": "obsidian",
        }
    }


class ApiQuestions(BaseModel):
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Questions API."""

    prefix: str = "/questions"
    tags: list[str] = ["Questions"]


class ApiAnswers(BaseModel):
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Questions API."""

    prefix: str = "/answers"
    tags: list[str] = ["Answers"]


class ApiBaseConfig(BaseModel):
    """–ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API."""

    slash: str = "/"
    docs: str = "/docs"

    prefix: str = "/api"
    tags: list[str] = ["Q&A API"]

    questions: ApiQuestions = ApiQuestions()
    answers: ApiAnswers = ApiAnswers()


class Database(BaseModel):
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ORM –∏ –ë–î."""

    url: PostgresDsn  # –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –∏–∑ .env
    echo: bool = False
    echo_pool: bool = False
    max_overflow: int = 50
    pool_size: int = 10

    naming_convention: dict[str, str] = {
        "ix": "ix_%(column_0_label)s",
        "uq": "uq_%(table_name)s_%(column_0_N_name)s",
        "ck": "ck_%(table_name)s_%(constraint_name)s",
        "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
        "pk": "pk_%(table_name)s",
    }


class Settings(BaseSettings):
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""

    model_config = SettingsConfigDict(
        case_sensitive=False,
        env_nested_delimiter="__",
        env_prefix="APP_CONFIG__",
        env_file=".env",
        # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –Ω–µ —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞
        extra="ignore",
    )

    run: RunConfig = RunConfig()
    app: AppObjectConfig = AppObjectConfig()
    api: ApiBaseConfig = ApiBaseConfig()
    db: Database


# noinspection PyArgumentList
settings: Settings = Settings()
